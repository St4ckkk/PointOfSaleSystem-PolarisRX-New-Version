/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pointofsalesystem;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.krysalis.barcode4j.HumanReadablePlacement;
import org.krysalis.barcode4j.impl.code128.Code128Bean;
import org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider;
import org.krysalis.barcode4j.tools.UnitConv;
import static pointofsalesystem.POSController.CashierLabel;
import static pointofsalesystem.POSController.CustomerLabel;
import static pointofsalesystem.POSController.DateLabel;
import static pointofsalesystem.POSController.TimeLabel;
import static pointofsalesystem.POSController.background;
import static pointofsalesystem.POSController.psrvc;

/**
 *
 * @author pswor
 */
public class PullOutStock extends javax.swing.JFrame {

    public String prod_id;
    public String prodName;
    public String price;
    int quantity;

    /**
     * Creates new form QuantPrompt
     */
    public PullOutStock() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Quantity = new javax.swing.JPasswordField();
        AddButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Notes = new javax.swing.JTextArea();
        AddButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 400));
        setMinimumSize(new java.awt.Dimension(400, 400));
        setPreferredSize(new java.awt.Dimension(400, 400));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(400, 400));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 400));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Stock Pull-Out");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Notes");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 50, -1));

        Quantity.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Quantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityActionPerformed(evt);
            }
        });
        Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                QuantityKeyTyped(evt);
            }
        });
        jPanel1.add(Quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 220, 40));

        AddButton.setBackground(new java.awt.Color(255, 0, 0));
        AddButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddButton.setText("Pull-Out");
        AddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 100, 50));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Void Sales");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        Stock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Stock.setForeground(new java.awt.Color(0, 153, 102));
        Stock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Stock.setText("Quantity");
        jPanel1.add(Stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 57, 340, 30));

        Notes.setColumns(20);
        Notes.setRows(5);
        jScrollPane1.setViewportView(Notes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 220, -1));

        AddButton1.setBackground(new java.awt.Color(0, 204, 0));
        AddButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddButton1.setText("Cancel");
        AddButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(AddButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 110, 50));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Quantity");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void printDR() {
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setPrintable(new PullOutStock.DRPrintable(), getPageFormat(pj));
        try {
            pj.setPrintService(psrvc);
        } catch (PrinterException ex) {
            Logger.getLogger(LowStocks.class.getName()).log(Level.SEVERE, null, ex);
        }
        pj.setJobName("Delivery Reciept");
        try {
            pj.print();

        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double middleHeight = 8.0;
        double headerHeight = 2.0;
        double footerHeight = 2.0;
        double width = convertCMToPPI(6);      //printer know only point per inch.default value is 72ppi
        double height = convertCMToPPI(headerHeight * middleHeight * footerHeight);
        paper.setSize(width, pf.getHeight());
        /*paper.setImageableArea(
                0,
                8,
                width,
                height - convertCMToPPI(1000)
        );   //define boarder size    after that print area width is about 180 points
        */
        pf.setOrientation(PageFormat.PORTRAIT);           //select orientation portrait or landscape but for this time portrait
        pf.setPaper(paper);

        return pf;
    }

    protected static double convertCMToPPI(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 72d;
    }
    public class DRPrintable implements Printable {

        @Override
        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
            int result = NO_SUCH_PAGE;
            if (pageIndex == 0) {

                Graphics2D g2d = (Graphics2D) graphics;

                double width = pageFormat.getImageableWidth();

                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                ////////// code by alqama//////////////
                FontMetrics metrics = g2d.getFontMetrics(new Font("Arial", Font.BOLD, 7));
                //    int idLength=metrics.stringWidth("000000");
                //int idLength=metrics.stringWidth("00");
                int idLength = metrics.stringWidth("000");
                int amtLength = metrics.stringWidth("000000");
                int qtyLength = metrics.stringWidth("00000");
                int priceLength = metrics.stringWidth("000000");
                int prodLength = (int) width - idLength - amtLength - qtyLength - priceLength - 17;

                //    int idPosition=0;
                //    int productPosition=idPosition + idLength + 2;
                //    int pricePosition=productPosition + prodLength +10;
                //    int qtyPosition=pricePosition + priceLength + 2;
                //    int amtPosition=qtyPosition + qtyLength + 2;
                int productPosition = 0;
                int discountPosition = prodLength + 5;
                int pricePosition = discountPosition + idLength + 10;
                int qtyPosition = pricePosition + priceLength + 4;
                int amtPosition = qtyPosition + qtyLength;

                try {
                    /*Draw Header*/
                    int y = 17;
                    int yShift = 6;
                    int headerRectHeight = 13;
                    int headerRectHeighta = 40;
                    g2d.setColor(Color.black);
                    g2d.drawImage(POSController.background, 44, 1, null);
                    y += 64;
                    
                    g2d.setFont(new Font("Monospaced", Font.CENTER_BASELINE, 10));
                    g2d.setFont(new Font("Monospaced", Font.BOLD, 10));
                    g2d.drawString("------------------------------------", 2, 0);
                    y += yShift+6;
                    g2d.drawString("PRODUCT PULL OUT ", 2, y);
                    y += yShift+3;
                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawString("Date: " + DateLabel.getText(), 2, y);
                    y += yShift+4;
                    g2d.drawString("-------------------------------------", 2, y);
                    y += yShift+3;
                    g2d.setFont(new Font("Monospaced", Font.BOLD, 10));
                    g2d.drawString("" + Stock.getText(), 2, y);
                    y += yShift+3;
                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawString("-------------------------------------", 2, y);
                    y += yShift+3;
                    g2d.drawString("", 2, y);
                    y += headerRectHeight;
                    g2d.setFont(new Font("Monospaced", Font.BOLD, 10));
                    g2d.drawString("Quantity: " + Quantity.getText()        , 2, y);
                    y += yShift+6;
                    g2d.drawString("Notes: "         , 2, y);
                    y += yShift+5;
                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawString("" + Notes.getText()        , 2, y);
                    y += yShift+3;
                    
                    g2d.drawString("--------------------------", 2, y);
                    y += yShift+3;
                    g2d.drawString("Point of Sale System    ", 2, y);
                    y += yShift+3;
                    g2d.drawString("Developed by MPOS          ", 2, y);
                    y += yShift+3;
                    g2d.drawString("All rights reserved         ", 2, y);
                    y += yShift+3;
                    g2d.drawString("*************************************", 2, y);
                    y += yShift+3;
//            g2d.setFont(new Font("Monospaced",Font.BOLD,10));
//            g2d.drawString("Customer Shopping Invoice", 30,y);y+=yShift; 
                } catch (NumberFormatException r) {
                    JOptionPane.showMessageDialog(null, r);
                }
                result = PAGE_EXISTS;
            }
            return result;
        }
    }

    private void QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityActionPerformed

    }//GEN-LAST:event_QuantityActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Quantity.setEchoChar((char) 0);
    }//GEN-LAST:event_formWindowOpened

    private void QuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuantityKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))) {
            evt.consume();
        }
    }//GEN-LAST:event_QuantityKeyTyped

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        if("".equals(Quantity.getText())){
            JOptionPane.showMessageDialog(null, "Please input quantity to pull-out/transfer", "Quantity", JOptionPane.WARNING_MESSAGE);
        }
        else if("".equals(Notes.getText())){
            JOptionPane.showMessageDialog(null, "Please consider adding Notes", "Notes", JOptionPane.WARNING_MESSAGE);
        }
        else{
            try {
                Connection con = DBConnection.DBConnection();
                PreparedStatement pstCheck = con.prepareStatement("SELECT * FROM pulled_out_stck WHERE prod_id = '"+prod_id+"' AND quantity = '"+Quantity.getText()+"' AND notes = '"+Notes.getText()+"'");
                ResultSet rsCheck = pstCheck.executeQuery();
                if(rsCheck.next()){
                    JOptionPane.showMessageDialog(null, "Pull-Out Details exists for this product including quantity and notes", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
                }
                else{
                    PreparedStatement pstInsert = con.prepareStatement("INSERT INTO pulled_out_stck(prod_id,quantity,notes) VALUES(?,?,?)");
                    pstInsert.setString(1, prod_id);
                    pstInsert.setString(2, Quantity.getText());
                    pstInsert.setString(3, Notes.getText());
                    pstInsert.executeUpdate();
                    
                    PreparedStatement pstUpdateInventory = con.prepareStatement("UPDATE stocks_inventory SET available_stock = available_stock - '"+Quantity.getText()+"' WHERE prod_id = '"+prod_id+"'");
                    pstUpdateInventory.executeUpdate();
                    int ask = JOptionPane.showConfirmDialog(null, "Do you want to print pull-out reciept?","Print Reciept", JOptionPane.YES_NO_OPTION);
                    if(ask == JOptionPane.YES_OPTION){
                        printDR();
                    }
                    else{
                        
                    }
                    dispose();
                }
            } catch (SQLException ex) {
                Logger.getLogger(PullOutStock.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void AddButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_AddButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PullOutStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PullOutStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PullOutStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PullOutStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PullOutStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton AddButton1;
    private javax.swing.JTextArea Notes;
    private javax.swing.JPasswordField Quantity;
    public static final javax.swing.JLabel Stock = new javax.swing.JLabel();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
