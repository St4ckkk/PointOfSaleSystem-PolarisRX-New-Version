/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pointofsalesystem;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Michael Paul Sebando
 */
public class QuickView extends javax.swing.JFrame {

    /**
     * Creates new form QuickView
     */
    public QuickView() {
        initComponents();
        ImageIcon imgicon=new ImageIcon(getClass().getResource("/pointofsalesystem/Icons/POS Terminal_100px.png"));
        this.setIconImage(imgicon.getImage());
        this.setTitle("Financial Glance");
        //displayQuickView();
        displaySpecificQuickViewTry();
        total_all_recievable();
        getTotalProductCost();
        getTotalProductAmount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        GrossSales = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        totalDiscount = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        grossPayroll = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        totalStoreExpense = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Income = new javax.swing.JLabel();
        netPayroll = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        collections = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        FromDate = new com.toedter.calendar.JDateChooser();
        toDate = new com.toedter.calendar.JDateChooser();
        FilterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Quick Report Viewer");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 450, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel2.setText("Gross Sales");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        GrossSales.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GrossSales.setText("0");
        jPanel5.add(GrossSales, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 10, 144, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel7.setText("Total Discount");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 46, -1, 30));

        totalDiscount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalDiscount.setText("0");
        jPanel5.add(totalDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 46, 144, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel9.setText("Total Product Cost");
        jLabel9.setToolTipText("");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 127, -1, 30));

        grossPayroll.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        grossPayroll.setText("0");
        grossPayroll.setToolTipText("Total quantity of beggining inventory multiplied by its product cost.");
        jPanel5.add(grossPayroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 127, 144, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel15.setText("Store Expense");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, -1, 30));

        totalStoreExpense.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalStoreExpense.setText("0");
        jPanel5.add(totalStoreExpense, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 87, 144, 30));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Net Income");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Income.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Income.setForeground(new java.awt.Color(0, 204, 0));
        Income.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Income.setText("0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Income, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Income, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 10, 160, -1));

        netPayroll.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        netPayroll.setText("0");
        netPayroll.setToolTipText("Total Available Product in inventory multiplied by its current price.");
        jPanel5.add(netPayroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 163, 144, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel16.setText("Total Product Amt");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 163, 90, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel17.setText("Collectible");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 199, -1, 30));

        collections.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        collections.setText("0");
        jPanel5.add(collections, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 199, 144, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Store Standing");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 450, 300));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 204, 0));
        jLabel6.setText("Report Filter");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 204, 0));
        jLabel11.setText("FROM");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 204, 0));
        jLabel12.setText("TO");

        FromDate.setDateFormatString("yyyy-MM-dd");
        FromDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        toDate.setDateFormatString("yyyy-MM-dd");
        toDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        FilterButton.setBackground(new java.awt.Color(0, 204, 51));
        FilterButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FilterButton.setText("Filter");
        FilterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(FilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FromDate, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toDate, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(FilterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel2.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 450, 170));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 490, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterButtonActionPerformed
        String dateFrom=((JTextField)FromDate.getDateEditor().getUiComponent()).getText();
        String dateTo=((JTextField)toDate.getDateEditor().getUiComponent()).getText();
        if(dateFrom.equals("")){
            JOptionPane.showMessageDialog(null, "Please select beginning date","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(dateTo.equals("")){
            JOptionPane.showMessageDialog(null, "Please select ending date","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{    
        displaySpecificQuickView();
        }
    }//GEN-LAST:event_FilterButtonActionPerformed
    Connection con=DBConnection.DBConnection();
    PreparedStatement pst;
    ResultSet rs;
    
    private void getTotalProductCost(){
        try{
            pst = con.prepareStatement("SELECT * FROM stocks_expiration");
            rs = pst.executeQuery();
            double cost = 0;
            while(rs.next()){
                double quant = rs.getDouble("quantity");
                double org_price = rs.getDouble("original_price");
                cost += (quant * org_price);
                
            }
            grossPayroll.setText(cost+"0");
            
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void getTotalProductAmount(){
        try{
            pst = con.prepareStatement("SELECT stocks_inventory.available_stock, menus.menuPrice FROM stocks_inventory LEFT JOIN menus ON menus.menuID = stocks_inventory.prod_id");
            rs = pst.executeQuery();
            double total = 0;
            while(rs.next()){
               double av_stock = rs.getDouble("available_stock");
               double menuPrice = rs.getDouble("menuPrice");
               double totalPrice = av_stock * menuPrice;
               total += totalPrice;
            }

            netPayroll.setText(String.format("%.02f", total));
        }
        catch(Exception ex){
            
        }
    }
    private void displayQuickView(){
        try{
            pst=con.prepareStatement("SELECT ROUND(sum(salesAmount),2) AS totalSales FROM sales");
            rs=pst.executeQuery();
            if(rs.next()){
                GrossSales.setText(rs.getString("totalSales"));
            }
            try{
                pst=con.prepareStatement("SELECT ROUND(sum(discount),2) AS totalDiscount FROM sales");
                rs=pst.executeQuery();
                if(rs.next()){
                    totalDiscount.setText(rs.getString("totalDiscount"));
                }
                try{
                    pst=con.prepareStatement("SELECT ROUND(sum(amount),2) AS totalStoreExpense FROM expenses");
                    rs=pst.executeQuery();
                    if(rs.next()){
                        totalStoreExpense.setText(rs.getString("totalStoreExpense"));
                    }
                    try{
                       pst=con.prepareStatement("SELECT ROUND(sum(gross),2) FROM payrollsummary");
                       rs=pst.executeQuery();
                       if(rs.next()){
                           
                       }
                       try{
                       pst=con.prepareStatement("SELECT ROUND(sum(gross),2) AS payrollGross FROM payrollsummary");
                       rs=pst.executeQuery();
                            if(rs.next()){
                                grossPayroll.setText(rs.getString("payrollGross"));
                            }
                            try{
                                pst=con.prepareStatement("SELECT ROUND(sum(net),2) AS netPayroll from payrollSummary");
                                rs=pst.executeQuery();
                                if(rs.next()){
                                    netPayroll.setText(rs.getString("netPayroll"));
                                }
                                try{
                                    pst=con.prepareStatement("SELECT ROUND(sum(deductions),2) AS totalCollections FROM payrollSummary");
                                    rs=pst.executeQuery();
                                    if(rs.next()){
                                        collections.setText(rs.getString("totalCollections"));
                                    }
                                    try{
                                        calculateIncome();
                                    }
                                    catch(Exception ex){
                                        //JOptionPane.showMessageDialog(null, ex);
                                    }
                                }
                                catch(SQLException ex){
                                    //JOptionPane.showMessageDialog(null, ex);
                                }
                            }
                            catch(SQLException ex){
                                //JOptionPane.showMessageDialog(null, ex);
                            }
                        }
                        catch(SQLException ex){
                            //JOptionPane.showMessageDialog(null, ex);
                        }
                    }
                    catch(SQLException ex){
                        //JOptionPane.showMessageDialog(null, ex);
                    }
                }
                catch(SQLException ex){
                    //JOptionPane.showMessageDialog(null, ex);
                }
            }
            catch(SQLException ex){
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
        catch(SQLException ex){
            //JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void calculateIncome(){
        double gross=Double.parseDouble(GrossSales.getText());
        double discount=Double.parseDouble(totalDiscount.getText());
        double expense=Double.parseDouble(totalStoreExpense.getText());
        double payroll=Double.parseDouble(grossPayroll.getText());
        
        double credit=discount+expense+payroll;
        double sales=gross-credit;
        try{
            pst=con.prepareStatement("SELECT ROUND('"+sales+"') AS totalIncome");
            rs=pst.executeQuery();
            if(rs.next()){
                String income=rs.getString("totalIncome");
                if(income.contains("-")){
                    Income.setText(income+".00");
                    Income.setForeground(Color.red);
                }
                else{
                    Income.setText(income+".00");
                    Income.setForeground(Color.GREEN);
                }
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void displaySpecificQuickView(){
        String dateFrom=((JTextField)FromDate.getDateEditor().getUiComponent()).getText();
        String dateTo=((JTextField)toDate.getDateEditor().getUiComponent()).getText();
        try{
            pst=con.prepareStatement("SELECT ROUND(sum(salesAmount),2) AS totalSales FROM sales WHERE salesDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
            rs=pst.executeQuery();
            if(rs.next()){
                GrossSales.setText(Double.toString(rs.getDouble("totalSales"))+"0");
            }
            else{
                GrossSales.setText("0.00");
            }
            try{
                pst=con.prepareStatement("SELECT ROUND(sum(discount),2) AS totalDiscount FROM sales WHERE salesDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
                rs=pst.executeQuery();
                if(rs.next()){
                    totalDiscount.setText(Double.toString(rs.getDouble("totalDiscount"))+"0");
                }
                else{
                    totalDiscount.setText("0.00");
                }
                try{
                    pst=con.prepareStatement("SELECT ROUND(sum(amount),2) AS totalStoreExpense FROM expenses WHERE purchaseDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
                    rs=pst.executeQuery();
                    if(rs.next()){
                        totalStoreExpense.setText(Double.toString(rs.getDouble("totalStoreExpense"))+"0");
                    }
                    else{
                        totalStoreExpense.setText("0.00");
                    }
                    try{
                        pst=con.prepareStatement("SELECT ROUND(sum(gross),2) AS grossPayroll FROM payrollsummary WHERE payrollDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
                        rs=pst.executeQuery();
                        if(rs.next()){
                            grossPayroll.setText(Double.toString(rs.getDouble("grossPayroll"))+"0");
                        }
                        else{
                            grossPayroll.setText("0.00");
                        }
                            try{
                                pst=con.prepareStatement("SELECT ROUND(sum(net),2) AS netPayroll FROM payrollsummary WHERE payrollDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
                                rs=pst.executeQuery();
                                if(rs.next()){
                                    netPayroll.setText(Double.toString(rs.getDouble("netPayroll"))+"0");
                                }
                                else{
                                    netPayroll.setText("0.00");
                                }
                                    try{
                                        pst=con.prepareStatement("SELECT ROUND(sum(deductions),2) AS payrollDeduction FROM payrollsummary WHERE payrollDate BETWEEN '"+dateFrom+"' AND '"+dateTo+"'");
                                        rs=pst.executeQuery();
                                        if(rs.next()){
                                            //collections.setText(Double.toString(rs.getDouble("payrollDeduction"))+"0");
                                        }
                                        else{
                                            //collections.setText("0.00");
                                        }
                                           calculateIncome(); 
                                        }
                                    catch(SQLException ex){
                                        JOptionPane.showMessageDialog(null, ex);
                                        }
                                }
                            catch(SQLException ex){
                                    JOptionPane.showMessageDialog(null, ex);
                            }
                        }
                    catch(SQLException ex){
                        JOptionPane.showMessageDialog(null, ex);
                    }
                       
                    
                    
                }
                catch(SQLException ex){
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void displaySpecificQuickViewTry(){
        String dateFrom=((JTextField)FromDate.getDateEditor().getUiComponent()).getText();
        String dateTo=((JTextField)toDate.getDateEditor().getUiComponent()).getText();
        try{
            pst=con.prepareStatement("SELECT ROUND(sum(salesAmount),2) AS totalSales FROM sales");
            rs=pst.executeQuery();
            if(rs.next()){
                GrossSales.setText(Double.toString(rs.getDouble("totalSales"))+"0");
            }
            else{
                GrossSales.setText("0.00");
            }
            try{
                pst=con.prepareStatement("SELECT ROUND(sum(discount),2) AS totalDiscount FROM sales");
                rs=pst.executeQuery();
                if(rs.next()){
                    totalDiscount.setText(Double.toString(rs.getDouble("totalDiscount"))+"0");
                }
                else{
                    totalDiscount.setText("0.00");
                }
                try{
                    pst=con.prepareStatement("SELECT ROUND(sum(amount),2) AS totalStoreExpense FROM expenses");
                    rs=pst.executeQuery();
                    if(rs.next()){
                        totalStoreExpense.setText(Double.toString(rs.getDouble("totalStoreExpense"))+"0");
                    }
                    else{
                        totalStoreExpense.setText("0.00");
                    }
                    try{
                        pst=con.prepareStatement("SELECT ROUND(sum(gross),2) AS grossPayroll FROM payrollsummary");
                        rs=pst.executeQuery();
                        if(rs.next()){
                            grossPayroll.setText(Double.toString(rs.getDouble("grossPayroll"))+"0");
                        }
                        else{
                            grossPayroll.setText("0.00");
                        }
                            try{
                                pst=con.prepareStatement("SELECT ROUND(sum(net),2) AS netPayroll FROM payrollsummary");
                                rs=pst.executeQuery();
                                if(rs.next()){
                                    netPayroll.setText(Double.toString(rs.getDouble("netPayroll"))+"0");
                                }
                                else{
                                    netPayroll.setText("0.00");
                                }
                                    try{
                                        pst=con.prepareStatement("SELECT ROUND(sum(deductions),2) AS payrollDeduction FROM payrollsummary");
                                        rs=pst.executeQuery();
                                        if(rs.next()){
                                            //collections.setText(Double.toString(rs.getDouble("payrollDeduction"))+"0");
                                        }
                                        else{
                                            //collections.setText("0.00");
                                        }
                                           calculateIncome(); 
                                        }
                                    catch(SQLException ex){
                                        JOptionPane.showMessageDialog(null, ex);
                                        }
                                }
                            catch(SQLException ex){
                                    JOptionPane.showMessageDialog(null, ex);
                            }
                        }
                    catch(SQLException ex){
                        JOptionPane.showMessageDialog(null, ex);
                    }
                       
                    
                    
                }
                catch(SQLException ex){
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void total_all_recievable(){
        try{
            Connection con1=DBConnection.DBConnection();
            PreparedStatement pst1=con1.prepareStatement("SELECT sum(salesAmount) AS total_recievable FROM credit_sales");
            ResultSet rs1=pst1.executeQuery();
            if(rs1.next()){
                collections.setText(Double.toString(rs1.getDouble("total_recievable"))+"0");
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuickView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuickView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuickView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuickView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuickView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FilterButton;
    private com.toedter.calendar.JDateChooser FromDate;
    private javax.swing.JLabel GrossSales;
    private javax.swing.JLabel Income;
    private javax.swing.JLabel collections;
    private javax.swing.JLabel grossPayroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel netPayroll;
    private com.toedter.calendar.JDateChooser toDate;
    private javax.swing.JLabel totalDiscount;
    private javax.swing.JLabel totalStoreExpense;
    // End of variables declaration//GEN-END:variables
}
